
Example 1. Only one limb with a negative coefficient.


q0 = 1434244213295

q0 is a 41-bit unsigned number.
q0 = 0b10100110111101111100111011110101000101111

-------------------------------------------------------------------------------
101001 1011110 1111100 1110111 1010100 0101111

q0_limbs = [47, 84 * 2**7, 119 * 2**14, 124 * 2**21, 94 * 2**28, 41* 2**35]
assert(sum(q0_limbs) == 1434244213295)
-------------------------------------------------------------------------------

We want to represent -1434244213295, as 6 limbs of 7 bits each

(1) Note that (q0 - 2**42) == -q0
python:
bin(1434244213295 - 2**42)
'-0b101011001000010000011000100001010111010001'
(1010110 0100001 0000011 0001000 0101011 1010001)


(2) Find q0c, the 2's complement of q0
0101001 1011110 1111100 1110111 1010100 0101111 (q0 limbs)
1010110 0100001 0000011 0001000 0101011 1010000 (1's complement)
1010110 0100001 0000011 0001000 0101011 1010001  (2's complement)
This value is same as the one shown in (1) above with a python snippet.

q0c limbs = 1010110 0100001 0000011 0001000 0101011 1010001
               l5      l4      l3      l2     l1      l0

l5  1010110 = -42 == 86-2**7
l4  0100001 =  33
l3  0000011 =   3
l2  0001000 =   8
l1  0101011 =  44 == 43 + 1
l0  1010001 = -47 == 81-2**7


q0c_limbs = [-47, 44 * 2**7, 8 * 2**14, 3 * 2**21, 33 * 2**28,  -42* 2**35]
assert(sum(q0c_limbs) == -1434244213295)

-------------------------------------------------------------------------------