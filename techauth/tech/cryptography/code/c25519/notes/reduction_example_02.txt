
Example 2. Multiple limbs with negative coefficients.


q0 = 1417063295535

q0 is a 41-bit unsigned number.
q0 = 0b10100100111101111100011011110101000101111

-------------------------------------------------------------------------------
101001 0011110 1111100 0110111 1010100 0101111

q0_limbs = [47, 84 * 2**7, 55 * 2**14, 124 * 2**21, 30 * 2**28, 41 * 2**35]
assert(sum(q0_limbs) == 1417063295535)
-------------------------------------------------------------------------------

We want to represent -1417063295535, as 6 limbs of 7 bits each

(1) Note that (q0 - 2**42) == -q0
python:
bin(1417063295535 - 2**42)
'-0b101011011000010000011100100001010111010001'
(1010110 1100001 0000011 1001000 0101011 1010001)


(2) Find q0c, the 2's complement of q0
0101001 0011110 1111100 0110111 1010100 0101111 (q0_limbs)
1010110 1100001 0000011 1001000 0101011 1010000 (1's complement)
1010110 1100001 0000011 1001000 0101011 1010001 (2's complement)
This value is same as the one shown in (1) above with a python snippet.

q0c_limbs = 1010110 1100001 0000011 1001000 0101011 1010001
               l5      l4      l3      l2     l1      l0

l5  1010110 = -41 == (86-2**7)+1 == -42+1
l4  1100001 = -31 == 97-2**7
l3  0000011 =   4 == 3+1
l2  1001000 = -56 == 72-2**7
l1  0101011 =  44 == 43+1
l0  1010001 = -47 == 81- 2**7


q0c_limbs = [-47, 44 * 2**7, -56 * 2**14, 4 * 2**21, -31 * 2**28, -41 * 2**35]
assert(sum(q0c_limbs) == -1417063295535)

-------------------------------------------------------------------------------